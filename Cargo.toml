[package]
name = "compound_prism_designer"
version = "0.2.0"
authors = ["Julia Tatz <tatz.j@husky.neu.edu>"]
license-file = "LICENSE.md"
edition = "2021"
include = ["/src/**/*", "/benches/**/*", "/Cargo.toml", "/pyproject.toml", "/compound_prism_designer/*.py", "/make.toml", "/README.md", "/requirements.txt", "nvptx64-nvidia-cuda.json"]

[lib]
bench = false

[dependencies]
derive_more = "0.99"
libm = "0.2"
num-traits = { version = "0.2", default-features = false, features = ["libm"] }
rustacuda_core = { git = "https://github.com/jdtatz/RustaCUDA.git", branch = "driver_update" }
rustacuda = { git = "https://github.com/jdtatz/RustaCUDA.git", branch = "driver_update", optional = true }
parking_lot = { version = "0.12", optional = true }
pyo3 = { version="0.20", features = ["extension-module", "abi3-py37"], optional = true }
numpy = { version="0.20", optional = true }
paste = "1.0"
derive-wrapped-from = { path = "./derive-wrapped-from" }
float_eq = { version = "1.0", default-features = false }

[target.'cfg(target_arch="nvptx64")'.dependencies]
nvptx-sys = { git = "https://github.com/jdtatz/nvptx-sys.git", features = ["panic"]}

[dev-dependencies]
statrs = "0.16"
rand = "0.8"
rand_xoshiro = "0.6"
float_eq = "1.0"
criterion = {version = "0.4", default-features = false}

[target.'cfg(unix)'.dev-dependencies]
pprof = { version = "0.11", features = ["flamegraph", "prost-codec"] }

[features]
default = []
std = ["num-traits/std", "float_eq/std"]
cuda = ["std", "rustacuda", "parking_lot"]
pyext = ["std", "pyo3", "numpy"]

[[bench]]
name = "benchmark"
harness = false
required-features = ["std"]

[profile.release]
opt-level=3
lto=true

[profile.bench]
debug = true

[profile.release.build-override]
opt-level=0

[workspace]
members = ["derive-wrapped-from"]
